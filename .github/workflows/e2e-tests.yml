name: E2E Tests

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: Install Go dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y sqlite3 libsqlite3-dev
      
      - name: Create data directories
        run: mkdir -p data/images data/pdfs
      
      - name: Build Go app
        run: |
          go build -o app cmd/server/main.go
        env:
          CGO_ENABLED: 1
          GOOS: linux
          GOARCH: amd64
      
      - name: Start app server
        run: |
          ./app &
          # Wait for the server to start
          echo "Waiting for server to start..."
          sleep 10
          # Check if server is running
          curl -s http://localhost:8080/ > /dev/null
          if [ $? -eq 0 ]; then
            echo "Server is running at http://localhost:8080/"
          else
            echo "Failed to start server"
            exit 1
          fi
        env:
          DATA_DIR: ${{ github.workspace }}/data
          LOG_LEVEL: DEBUG
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'e2e/package-lock.json'
      
      - name: Install Playwright and dependencies
        working-directory: e2e
        run: |
          npm ci
          npx playwright install chromium --with-deps
      
      - name: Create screenshots directory
        run: mkdir -p e2e/screenshots
      
      - name: Run Playwright tests
        working-directory: e2e
        run: |
          # Run simplified tests (they're more robust)
          npx playwright test tests/pages.spec.js
        env:
          CI: true
          BASE_URL: http://localhost:8080
      
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: |
            e2e/playwright-report/
            e2e/test-results/
            e2e/screenshots/
          retention-days: 14
      
      - name: Upload generated PDFs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: generated-pdfs
          path: |
            data/pdfs/
          retention-days: 14 